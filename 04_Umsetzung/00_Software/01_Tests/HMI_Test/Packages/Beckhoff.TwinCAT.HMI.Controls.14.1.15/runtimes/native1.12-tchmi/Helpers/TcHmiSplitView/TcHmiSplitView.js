"use strict";var TcHmi;!function(TcHmi){!function(Controls){!function(Helpers){class SplitView extends HTMLElement{constructor(options){super(),Object.defineProperty(this,"__container",{enumerable:!0,configurable:!0,writable:!0,value:[]}),Object.defineProperty(this,"__resizeBar",{enumerable:!0,configurable:!0,writable:!0,value:document.createElement("div")}),Object.defineProperty(this,"__alignment",{enumerable:!0,configurable:!0,writable:!0,value:SplitView.Alignment.horizontal}),Object.defineProperty(this,"__resizeInProgress",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"__previousDownPosition",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"__previousSize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"__resizeBarOnPointerDown",{enumerable:!0,configurable:!0,writable:!0,value:cell=>e=>{this.__resizeInProgress=!0;if(e.target===cell&&e.offsetX>cell.clientWidth-SplitView.resizeBarTolerance){let startX=e.clientX;if(!cell.parentElement)return;[...cell.parentElement.children].indexOf(cell);const startWidth=cell.getBoundingClientRect().width;document.addEventListener("mousemove",this.__resizeBarOnPointerMove(startX,startWidth)),document.addEventListener("mouseup",this.__resizeBarOnPointerUp())}this.style.cursor="col-resize"}}),Object.defineProperty(this,"__resizeBarOnPointerMove",{enumerable:!0,configurable:!0,writable:!0,value:(startX,startWidth)=>e=>{e.clientX;document.body.style.cursor="col-resize"}}),Object.defineProperty(this,"__resizeBarOnPointerUp",{enumerable:!0,configurable:!0,writable:!0,value:()=>()=>{this.__resizeInProgress=!1,this.style.removeProperty("cursor")}}),options?.alignment?this.__alignment=options?.alignment:"horizontal"===this.dataset.alignment?this.__alignment=SplitView.Alignment.horizontal:"vertical"===this.dataset.alignment&&(this.__alignment=SplitView.Alignment.vertical)}connectedCallback(){const resizableElements=this.querySelectorAll('[data-resizable="horizontal"]');for(const element of resizableElements)element.addEventListener("pointerdown",this.__resizeBarOnPointerDown(element))}disconnectedCallback(){this.__removeEvents()}__removeEvents(){}isResizeInProgress(){return this.__resizeInProgress}}Object.defineProperty(SplitView,"resizeBarTolerance",{enumerable:!0,configurable:!0,writable:!0,value:8}),Helpers.SplitView=SplitView,function(SplitView){let Alignment;!function(Alignment){Alignment[Alignment.horizontal=0]="horizontal",Alignment[Alignment.vertical=1]="vertical"}(Alignment=SplitView.Alignment||(SplitView.Alignment={}))}(SplitView=Helpers.SplitView||(Helpers.SplitView={})),customElements.define("tchmi-split-view",SplitView)}(Controls.Helpers||(Controls.Helpers={}))}(TcHmi.Controls||(TcHmi.Controls={}))}(TcHmi||(TcHmi={}));